{"version":3,"sources":["components/map/map.context.jsx","components/map/map.jsx","components/layers/layers.jsx","components/layers/vector.layer.jsx","components/layers/tile.layer.jsx","components/source/vector.js","components/source/osm.js","components/controls/controls.jsx","components/controls/full-screen/full-screen.control.jsx","components/input/input.jsx","core/layer.utils.js","constants/actions.js","core/utils.js","core/layers/styles.js","components/app/app.jsx","reportWebVitals.js","index.jsx"],"names":["MapContext","createContext","map","Map","children","zoom","center","mapRef","useRef","useState","setMap","useEffect","options","view","View","layers","controls","overlays","mapObject","OLMap","setTarget","current","undefined","getView","setZoom","setCenter","Provider","value","ref","className","Layers","VectorLayer","source","style","useContext","vectorLayer","OLVectorLayer","addLayer","setZIndex","zIndex","removeLayer","TileLayer","tileLayer","OLTileLayer","vector","features","VectorSource","osm","olSource","Controls","attrs","FullScreenControl","fullScreenControl","FullScreen","activeClassName","inactiveClassName","tipLabel","push","remove","Input","id","label","labelClassName","htmlFor","type","layerFabric","layer","SHOW","OSM","BORDERS","REGIONS","RIVERS","CITIES","OOPT","SEAS","createTextStyle","feature","resolution","labelText","labelFont","labelFill","placement","hide","textStyle","Text","font","text","textBaseline","textAlign","offsetX","offsetY","maxAngle","fill","Fill","color","border","Style","stroke","Stroke","lineDash","lineCap","lineJoin","width","region","river","city","image","Circle","radius","oopt","geojsonObjectBorders","require","geojsonObjectRegions","geojsonObjectRivers","geojsonObjectCities","geojsonObjectOOPT","geojsonObjectSeas","initialState","visible","borders","regions","rivers","cities","seas","reducer","state","payload","actions","App","useReducer","dispatch","handleCheckbox","actionType","event","target","checked","fromLonLat","GeoJSON","readFeatures","featureProjection","get","styles","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6181052.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MapContext = new createContext({ map: {} });\n\nexport default MapContext;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { View, Map as OLMap } from 'ol';\nimport MapContext from './map.context';\nimport './map.scss';\n\nconst Map = ({\n  children,\n  zoom,\n  center,\n}) => {\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n\n  useEffect(() => {\n    const options = {\n      view: new View({ zoom, center }),\n      layers: [],\n      controls: [],\n      overlays: [],\n    };\n\n    const mapObject = new OLMap(options);\n    mapObject.setTarget(mapRef.current);\n\n    setMap(mapObject);\n\n    return () => {\n      mapObject.setTarget(undefined);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (map) {\n      map.getView().setZoom(zoom);\n    }\n  }, [zoom]);\n\n  useEffect(() => {\n    if (map) {\n      map.getView().setCenter(center);\n    }\n  }, [center]);\n\n  return (\n    <MapContext.Provider value={{ map }}>\n      <div ref={mapRef} className=\"ol-map\">\n        {children}\n      </div>\n    </MapContext.Provider>\n  );\n};\n\nexport default Map;\n","import React from \"react\";\n\nconst Layers = ({ children }) => (<div>{children}</div>);\n\nexport default Layers;\n","import { useContext, useEffect } from \"react\";\nimport MapContext from \"../map/map.context\";\nimport OLVectorLayer from \"ol/layer/Vector\";\n\nconst VectorLayer = ({ source, style, options = {} }) => {\n  const { map } = useContext(MapContext);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const vectorLayer = new OLVectorLayer({\n      source,\n      style,\n      ...options\n    });\n    map.addLayer(vectorLayer);\n    vectorLayer.setZIndex(options.zIndex ?? 1);\n\n    return () => {\n      if (map) {\n        map.removeLayer(vectorLayer);\n      }\n    };\n  }, [map, options]);\n\n  return null;\n};\nexport default VectorLayer;\n","import { useContext, useEffect } from 'react';\nimport MapContext from '../map/map.context';\nimport OLTileLayer from 'ol/layer/Tile';\n\nconst TileLayer = ({ source, zIndex = 0 }) => {\n  const { map } = useContext(MapContext);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    const tileLayer = new OLTileLayer({\n      source,\n      zIndex,\n    });\n\n    map.addLayer(tileLayer);\n    tileLayer.setZIndex(zIndex);\n\n    return () => {\n      if (map) {\n        map.removeLayer(tileLayer);\n      }\n    };\n  }, [map]);\n\n  return null;\n};\n\nexport default TileLayer;\n","import { Vector as VectorSource } from 'ol/source';\n\nfunction vector({ features }) {\n  return new VectorSource({\n    features\n  });\n}\n\nexport default vector;\n","import * as olSource from \"ol/source\";\n\nfunction osm() {\n  return new olSource.OSM();\n}\n\nexport default osm;\n","import React from 'react';\n\nconst Controls = ({ children, ...attrs }) => (<div {...attrs}>{children}</div>);\n\nexport default Controls;\n","import { useContext, useEffect } from 'react';\nimport { FullScreen } from 'ol/control';\nimport MapContext from '../../map/map.context';\nimport './full-screen.scss';\n\nconst FullScreenControl = () => {\n  const { map } = useContext(MapContext);\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    const fullScreenControl = new FullScreen({\n      className: 'control-full-screen',\n      activeClassName: 'control-full-screen__button',\n      inactiveClassName: 'control-full-screen__button',\n      tipLabel: 'Полноэкранный режим'\n    });\n    map.controls.push(fullScreenControl);\n\n    return () => map.controls.remove(fullScreenControl);\n  }, [map]);\n\n  return null;\n};\nexport default FullScreenControl;\n","import React from 'react';\nimport './input.scss';\n\nconst Input = ({\n  id,\n  label = '',\n  labelClassName = '',\n  ...attrs\n}) => {\n  return (\n    <label htmlFor={id} className={`input__container ${labelClassName}`}>\n      {label}\n      <input type=\"text\" className='input' {...attrs} />\n    </label>\n  );\n};\n\nexport default Input;\n","export function layerFabric(layer) {\n  return {\n    SHOW: `LAYER/${layer}_SHOW`,\n  };\n}\n","import { layerFabric } from '../core/layer.utils';\n\nexport const OSM = layerFabric('OSM');\nexport const BORDERS = layerFabric('BORDERS');\nexport const REGIONS = layerFabric('REGIONS');\nexport const RIVERS = layerFabric('RIVERS');\nexport const CITIES = layerFabric('CITIES');\nexport const OOPT = layerFabric('OOPT');\nexport const SEAS = layerFabric('SEAS');\n","import { Fill, Text } from 'ol/style';\n\nexport function createTextStyle(\n  feature,\n  resolution,\n  labelText = '',\n  labelFont = '1rem, sans-serif',\n  labelFill = 'rgba(0, 0, 0, 1)',\n  placement = 'point',\n) {\n  if (!feature.hide || labelText) {\n    return;\n  }\n\n  const textStyle = new Text({\n    font: labelFont,\n    text: labelText,\n    textBaseline: 'middle',\n    textAlign: 'left',\n    offsetX: 8,\n    offsetY: 3,\n    placement,\n    maxAngle: 0,\n    fill: new Fill({\n      color: labelFill,\n    }),\n  });\n\n  return textStyle;\n}\n","import { Circle, Fill, Stroke, Style, } from 'ol/style';\nimport { createTextStyle } from '../utils';\n\nexport const border = (feature, resolution) => new Style({\n  stroke: new Stroke({\n    color: 'rgba(238, 20, 16, 1.0)',\n    lineDash: null,\n    lineCap: 'square',\n    lineJoin: 'bevel',\n    width: 0,\n  }),\n  text: createTextStyle(feature, resolution, '', null,\n    null, 'line'),\n});\n\nexport const region = (feature, resolution) => [\n  new Style({\n    stroke: new Stroke({\n      color: 'rgba(114, 133, 132, 1.0)',\n      lineDash: null,\n      lineCap: 'butt',\n      lineJoin: 'miter',\n      width: 0,\n    }),\n    fill: new Fill({ color: 'rgba(222, 255, 255, 0.35)' }),\n    text: createTextStyle(feature, resolution),\n  }),\n];\n\nexport const river = (feature, resolution) => [\n  new Style({\n    stroke: new Stroke({\n      color: 'rgba(81, 10, 146, 1.0)',\n      lineDash: null,\n      lineCap: 'square',\n      lineJoin: 'bevel',\n      width: 0,\n    }),\n    fill: new Fill({ color: 'rgba(222, 255, 255, 1.0)' }),\n    text: createTextStyle(feature, resolution, null, null, null, 'line'),\n  }),\n];\n\nexport const city = (feature, resolution) => [\n  new Style({\n    image: new Circle({\n      radius: 4.0,\n      stroke: new Stroke({\n        color: 'rgba(0, 0, 0, 1.0)',\n        lineDash: null,\n        lineCap: 'butt',\n        lineJoin: 'miter',\n        width: 0,\n      }),\n      fill: new Fill({ color: 'rgba(231, 50, 247, 1.0)' }),\n    }),\n    text: createTextStyle(feature, resolution),\n  }),\n];\n\nexport const oopt = (feature, resolution) => [\n  new Style({\n    stroke: new Stroke({\n      color: 'rgba(0, 0, 0, 1.0)',\n      lineDash: null,\n      lineCap: 'butt',\n      lineJoin: 'miter',\n      width: 0,\n    }),\n    fill: new Fill({ color: 'rgba(6, 240, 240, 0.35)' }),\n    text: createTextStyle(feature, resolution),\n  }),\n];\n","import React, { useState, useReducer, useEffect } from 'react';\nimport Map from '../map/map';\nimport { Layers, TileLayer, VectorLayer } from '../layers';\nimport { osm, vector } from '../source';\nimport { fromLonLat, get } from 'ol/proj';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { Controls, FullScreenControl } from '../controls';\nimport Input from '../input/input';\nimport * as actions from '../../constants/actions';\nimport * as styles from '../../core/layers/styles';\nimport './app.scss';\n\nconst geojsonObjectBorders = require('../../assets/layers/borders.json');\nconst geojsonObjectRegions = require('../../assets/layers/regions.json');\nconst geojsonObjectRivers = require('../../assets/layers/rivers.json');\nconst geojsonObjectCities = require('../../assets/layers/cities.json');\nconst geojsonObjectOOPT = require('../../assets/layers/oopt.json');\nconst geojsonObjectSeas = require('../../assets/layers/seas.json');\n\nconst initialState = {\n  osm: {\n    visible: true,\n  },\n  borders: {\n    visible: true,\n  },\n  regions: {\n    visible: true,\n  },\n  rivers: {\n    visible: true,\n  },\n  cities: {\n    visible: true,\n  },\n  oopt: {\n    visible: true,\n  },\n  seas: {\n    visible: true,\n  },\n};\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case actions.OSM.SHOW:\n      return {\n        ...state,\n        osm: {\n          ...state.osm,\n          visible: payload\n        }\n      };\n    case actions.BORDERS.SHOW:\n      return {\n        ...state,\n        borders: {\n          ...state.borders,\n          visible: payload\n        }\n      };\n    case actions.REGIONS.SHOW:\n      return {\n        ...state,\n        regions: {\n          ...state.regions,\n          visible: payload\n        }\n      };\n    case actions.RIVERS.SHOW:\n      return {\n        ...state,\n        rivers: {\n          ...state.rivers,\n          visible: payload\n        }\n      };\n    case actions.CITIES.SHOW:\n      return {\n        ...state,\n        cities: {\n          ...state.cities,\n          visible: payload\n        }\n      };\n    case actions.OOPT.SHOW:\n      return {\n        ...state,\n        oopt: {\n          ...state.oopt,\n          visible: payload\n        }\n      };\n    case actions.SEAS.SHOW:\n      return {\n        ...state,\n        seas: {\n          ...state.seas,\n          visible: payload\n        }\n      };\n    default: return state;\n  }\n};\n\nconst App = () => {\n  const [center, setCenter] = useState([53.206889, 56.853093]);\n  const [zoom, setZoom] = useState(9);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleCheckbox = (actionType) => (event) => dispatch({ type: actionType, payload: event.target.checked });\n\n  return (\n    <div className='app'>\n      <Map center={fromLonLat(center)} zoom={zoom}>\n        <Layers>\n          {state.osm.visible && (\n            <TileLayer\n              source={osm()}\n              zIndex={0}\n            />\n          )}\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectBorders, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.border}\n            options={state.borders}\n          />\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectRegions, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.region}\n            options={state.regions}\n          />\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectRivers, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.river}\n            options={state.rivers}\n          />\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectCities, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.city}\n            options={state.cities}\n          />\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectOOPT, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.oopt}\n            options={state.oopt}\n          />\n          <VectorLayer\n            source={vector({\n              features: new GeoJSON().readFeatures(geojsonObjectSeas, { featureProjection: get('EPSG:3857') }),\n            })}\n            style={styles.oopt}\n            options={state.seas}\n          />\n        </Layers>\n        <Controls>\n          <FullScreenControl />\n        </Controls>\n        <Controls className='ol-map__controls'>\n          <Input\n            type=\"checkbox\"\n            checked={state.osm.visible}\n            onChange={handleCheckbox(actions.OSM.SHOW)}\n            label='Карта OSM'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.borders.visible}\n            onChange={handleCheckbox(actions.BORDERS.SHOW)}\n            label='Границы'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.regions.visible}\n            onChange={handleCheckbox(actions.REGIONS.SHOW)}\n            label='Регионы'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.rivers.visible}\n            onChange={handleCheckbox(actions.RIVERS.SHOW)}\n            label='Реки'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.seas.visible}\n            onChange={handleCheckbox(actions.SEAS.SHOW)}\n            label='Моря'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.oopt.visible}\n            onChange={handleCheckbox(actions.OOPT.SHOW)}\n            label='ООПТ'\n          />\n          <Input\n            type=\"checkbox\"\n            checked={state.cities.visible}\n            onChange={handleCheckbox(actions.CITIES.SHOW)}\n            label='Города'\n          />\n        </Controls>\n      </Map>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('geo-map')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}